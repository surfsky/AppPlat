数据接口层
	数据访问层在实体类直接实现: /DAL/Models/
	数据接口层（http接口）
		由若干DbXXX类实现，用WebCall方式导出
		可聚合多个实体类功能，如用户、角色、部门、权限归一类

































		  [WebCall(Description = "获取教练列表", Type = ResponseDataType.JSON, CacheDuration = 60)]
        public DataResult GetCoaches()
        {
            List<FitCoach> list = FitCoach.Search().OrderByDescending(s => s.PositiveCnt).ToList();
            return new DataResult("true", "获取成功", list, null);
        }

		
        [WebCall(Description = "教练登录", Type = ResponseDataType.JSON)]
        public static DataResult CoachLogin(string userName, string password, string msgCode)
        {

            DataResult dataResult = new DataResult("true", "登录成功", null, null);
            VerifyCode vCode = VerifyCode.Search(userName).OrderByDescending(s => s.ExpiredDt).FirstOrDefault();
            if (vCode == null || vCode.ExpiredDt < DateTime.Now)
            {
                dataResult = new DataResult("false", "验证码已过期", null, null);
            }
            else if (vCode.Code != msgCode)
            {
                dataResult = new DataResult("false", "验证码错误", null, null);
            }
            else
            {
                User user = App.DAL.User.Get(userName);
                if (user == null || !user.InUsed || !PasswordHelper.ComparePasswords(user.Password, password) || user.Roles.Count == 0)
                {
                    dataResult = new DataResult("false", "账号或密码错误", null, null);
                }
                else
                {
                    if (FitCoach.GetByUserId(user.ID) == null)
                    {
                        dataResult = new DataResult("false", "当前账号不属于教练", null, null);
                    }
                    else
                    {
                        LoginSuccess(user);
                        Log.AddLog("登录成功", userName, "INFO", "微信公众号（教练入口）");
                        dataResult = new DataResult("true", "登录成功", null, null);
                    }

                }
            }
            return dataResult;
        }





  ///// <summary>
        ///// 移动端登录（附加若干账户附属信息，如部门、角色等；无需验证码）
        ///// </summary>
        ///// <param name="userName"></param>
        ///// <param name="password"></param>
        ///// <param name="OS">客户端操作系统(android, ios...)</param>
        ///// <returns></returns>
        //[WebCall(Description = "用户登录", Type = ResponseDataType.JSON)]
        //public DataResult LoginMobile(string userName, string password, string OS)
        //{
        //    // 校验账户和密码
        //    User user = Common.Db.Users.Where(u => u.Name == userName).FirstOrDefault();
        //    if (user != null && user.Enabled && PasswordHelper.ComparePasswords(user.Password, password))
        //    {
        //        LoginSuccess(user);
        //        Log.AddLog("登录成功", userName, "INFO", OS);

        //        // 返回更详细的信息
        //        var q = Common.Db.Users.Select(u => new
        //        {
        //            u.ID,
        //            u.Name,
        //            u.Email,
        //            u.Gender,
        //            u.RealName,
        //            QQ = u.QQ.ToText(),
        //            Photo = u.Photo.ToText(),
        //            OfficePhone = u.Phone.ToText(),
        //            CellPhone = u.Mobile.ToText(),
        //            Remark = u.Remark.ToText(),
        //            Birthday = u.Birthday,
        //            LastLoginDt = u.LastLoginDt,
        //            DeptName = u.Dept.Name.ToText(),
        //            DeptID = u.Dept.ID
        //        }).Where(u => u.Name == userName).FirstOrDefault();
        //        return new DataResult("true", "登录成功", q, null);
        //    }
        //    else
        //    {
        //        Log.AddLog("登录失败", userName, "WARN", OS);
        //        return new DataResult("false", "账户或密码错误", null, null); ;
        //    }
        //}
